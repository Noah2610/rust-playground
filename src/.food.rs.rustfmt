pub mod prelude {
    pub use super::Color;
    pub use super::Apple;
    pub use super::Edible;
    pub use super::Crunchy;
}

#[derive(Debug, Clone, Copy)]
pub enum Color {
    Red,
    Green,
    Blue,
}

#[derive(Debug)]
pub struct Apple {
    color: Color,
}

impl Apple {
    pub fn new(color: Color) -> Apple {
        Apple {
            color: color
        }
    }

    pub fn color(&self) -> Color {
        self.color
    }
}

pub trait Edible {
    fn is_edible(&self) -> bool {
        true
    }

    fn taste(&self) -> &str;
}

pub trait Crunchy: Edible {
    fn is_crunchy(&self) -> bool {
        true
    }
}

impl Edible for Apple {
    fn taste(&self) -> &str {
        "Mmmh, crunchy..."
    }
}

impl Crunchy for Apple {}
